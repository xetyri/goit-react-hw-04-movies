{"version":3,"sources":["components/Api/ApiService.js","components/Gallery/Gallery.module.css","components/Gallery/Gallery.jsx","components/Button/Button.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Button/Button.jsx","components/views/HomePageView/HomePageView.js"],"names":["axios","defaults","baseURL","POPULAR_URL","API_KEY","SEARCH_URL","ID_URL","getTrendMovies","page","a","get","data","console","log","error","getMovieById","id","getMovieSearch","movie","fetchCast","fetchReviews","module","exports","Gallery","movies","location","useLocation","className","s","ImageGallery","map","title","poster_path","original_title","name","release_date","to","pathname","state","from","link","src","alt","slice","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","unsupportedIterableToArray","TypeError","Button","getMore","type","onClick","HomeView","useState","setPage","setMovies","status","setStatus","useEffect","getTrendFilm","Api","then","res","results","prev","showLoadMore","length","Loader","url"],"mappings":"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","file":"static/js/5.e55bfdd3.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst POPULAR_URL = 'trending/movie/day';\r\nconst API_KEY = 'b1b3673ec244ff3939488ad480401173';\r\nconst SEARCH_URL = '/search/movie';\r\nconst ID_URL = '/movie/';\r\n\r\nexport async function getTrendMovies(page) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${POPULAR_URL}?api_key=${API_KEY}&page=${page}`\r\n    );\r\n    console.log(data);\r\n    return data;\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getMovieById(id) {\r\n  try {\r\n    const { data } = await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\nexport async function getMovieSearch(movie, page) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${SEARCH_URL}?api_key=${API_KEY}&query=${movie}&page=${page}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\nexport async function fetchCast(id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${ID_URL}${id}/credits?api_key=${API_KEY}`\r\n    );\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function fetchReviews(id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${ID_URL}${id}/reviews?api_key=${API_KEY}&page=1`\r\n    );\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"Gallery_ImageGallery__2k_xe\",\"link\":\"Gallery_link__s1l-0\"};","import s from './Gallery.module.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Gallery({ movies}) {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {movies &&\r\n        movies.map(({ id, title, poster_path, original_title, name , release_date}) => (\r\n          <li key={id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${id}`,\r\n                state: { from: location },\r\n              }}\r\n              className={s.link}\r\n              >\r\n              <div>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${poster_path}`}\r\n                  alt={original_title || name}\r\n                />\r\n                <div>\r\n                  <h2>{title}</h2>\r\n                  {release_date && <span> ({release_date.slice(0, 4)})</span>}\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nGallery.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1CaC5\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({getMore}) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={getMore}>\r\n      Load more \r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  getMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useState, useEffect } from \"react\";\r\nimport Gallery from \"../../Gallery\";\r\nimport * as Api from '../../Api/ApiService';\r\nimport Button from \"../../Button\";\r\nimport Loader from '../../Loader';\r\n\r\n\r\nexport default function HomeView() {\r\n  const [page, setPage] = useState(1);\r\n  const [movies, setMovies] = useState([]);\r\n  const [status, setStatus] = useState('idle');\r\n\r\n    \r\n  useEffect(() => {\r\n    getTrendFilm();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getTrendFilm = () => {\r\n    setStatus('pending');\r\n\r\n    Api.getTrendMovies(page).then((res) => {\r\n    const data = res.results;\r\n    setMovies((prev) => [...prev, ...data]);\r\n    });\r\n    setPage((prev) => prev + 1);\r\n\r\n    // if (page !== 1) {\r\n    // // handlePageScroll();\r\n    // }\r\n    setStatus('resolved');\r\n  };\r\n\r\n  const loadMoreHandler = () => {\r\n    getTrendFilm();\r\n    \r\n  };\r\n\r\n  const showLoadMore = movies.length >=19\r\n\r\nreturn (\r\n    <>\r\n      {status === 'pending' && (\r\n        <Loader/>\r\n      )}\r\n      {movies ? (\r\n        <Gallery movies={movies} url={'movies'} location={'/'} />\r\n      ) : (\r\n        <h2>Error getting movies</h2>\r\n      )}\r\n      {showLoadMore && <Button getMore={loadMoreHandler} />}\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}