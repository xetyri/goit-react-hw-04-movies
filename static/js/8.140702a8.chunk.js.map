{"version":3,"sources":["components/views/DetailPageView/Reviews.jsx"],"names":["Reviews","useState","reviews","setReviews","status","setStatus","movieId","useParams","useEffect","fetchData","Api","then","res","results","handlePageScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","length","map","id","author","content","url","slice"],"mappings":"wOAQe,SAASA,IACpB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEQC,EAAYC,cAAZD,QAERE,qBAAU,WACNC,MAED,IAEH,IAAMA,EAAY,WACdJ,EAAU,WACVK,IAAiBJ,GAASK,MAAK,SAACC,GAChCT,EAAWS,EAAIC,YAEfR,EAAU,YACVS,KAGEA,EAAmB,WACrBC,OAAOC,SAAS,CAChBC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,YAId,OACI,qCACY,YAAXjB,GACG,cAAC,IAAD,IAEJ,8BACI,6BACCF,GAAWA,EAAQoB,OAAS,EACvBpB,EAAQqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,EAAwBC,IAAxB,OACV,+BACA,0CAAaF,KAEb,8BAAIC,EAAQE,MAAM,EAAG,KAArB,WAHSJ,MAMX","file":"static/js/8.140702a8.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport * as Api from '../../Api/ApiService'\r\nimport Load from '../../Loader';\r\n\r\n\r\n\r\nexport default function Reviews() {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [status, setStatus] = useState('idle');\r\n\r\n    const { movieId } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        setStatus('pending');\r\n        Api.fetchReviews(movieId).then((res) => {\r\n        setReviews(res.results);\r\n        });\r\n        setStatus('resolved');\r\n        handlePageScroll();\r\n    };\r\n\r\n    const handlePageScroll = () => {\r\n        window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {status === 'pending' && (\r\n            <Load/>\r\n        )}\r\n        <div>\r\n            <ul>\r\n            {reviews && reviews.length > 0\r\n                ? reviews.map(({ id, author, content, url }) => (\r\n                    <li key={id}>\r\n                    <h3>Author: {author}</h3>\r\n\r\n                    <p>{content.slice(0, 730)}...</p>\r\n                    </li>\r\n                ))\r\n                : \"We don't have any reviews for this movie\"}\r\n            </ul>\r\n        </div>\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\nReviews.propTypes = {\r\n  movieId: PropTypes.string,\r\n};"],"sourceRoot":""}